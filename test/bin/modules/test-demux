#!/bin/bash

# ------------------------------------------------------------
# test-demux
# 
# This is a test file.
#
# TEST: test the QKD demux feature
#
# Author: Oliver Maurhart, <oliver.maurhart@ait.ac.at>
#
# Copyright (C) 2012-2016 AIT Austrian Institute of Technology
# AIT Austrian Institute of Technology GmbH
# Donau-City-Strasse 1 | 1220 Vienna | Austria
# http://www.ait.ac.at
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation version 2.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, 
# Boston, MA  02110-1301, USA.
# ------------------------------------------------------------


# base source
export TEST_BASE="@CMAKE_BINARY_DIR@"
source ${TEST_BASE}/test/bin/test-functions


# ------------------------------------------------------------

# init test environment
test_init "$(basename $0).d"

rm -rf cat_keys.* &> /dev/null
${TEST_BASE}/bin/qkd-key-gen --silent --size 1000 --keys 1000 --random-url=linear-congruential:42 cat_keys

( ${TEST_BASE}/bin/qkd-cat --run --debug --config ${TEST_BASE}/test/test-data/demux/cat.conf 2> qkd_cat.debug ) &
( ${TEST_BASE}/bin/qkd-tee --run --debug --config ${TEST_BASE}/test/test-data/demux/tee-1.conf 1> /dev/null 2> qkd_tee.1.debug ) &
( ${TEST_BASE}/bin/qkd-tee --run --debug --config ${TEST_BASE}/test/test-data/demux/tee-2.conf 1> /dev/null 2> qkd_tee.2.debug ) &
( ${TEST_BASE}/bin/qkd-tee --run --debug --config ${TEST_BASE}/test/test-data/demux/tee-3.conf 1> /dev/null 2> qkd_tee.3.debug ) &
( ${TEST_BASE}/bin/qkd-tee --run --debug --config ${TEST_BASE}/test/test-data/demux/tee-4.conf 1> /dev/null 2> qkd_tee.4.debug ) &
( ${TEST_BASE}/bin/qkd-tee --run --debug --config ${TEST_BASE}/test/test-data/demux/tee-5.conf 1> /dev/null 2> qkd_tee.5.debug ) &

while [ "$(${TEST_BASE}/bin/qkd-view | grep at.ac.ait.qkd.module.cat | wc -l)" != "1" ]; do
    echo "waiting for the pipeline to ignite ..."
    sleep 1
done
while [ "$(${TEST_BASE}/bin/qkd-view | grep at.ac.ait.qkd.module.tee | wc -l)" != "5" ]; do
    echo "waiting for the pipeline to ignite ..."
    sleep 1
done
echo "modules created"

wait_idle
echo "got keys"
test_cleanup

grep ^key-PULL qkd_tee.1.debug > qkd_tee.1.PULL
grep ^key-PUSH qkd_tee.1.debug > qkd_tee.1.PUSH
grep ^key-PULL qkd_tee.2.debug > qkd_tee.2.PULL
grep ^key-PUSH qkd_tee.2.debug > qkd_tee.2.PUSH
grep ^key-PULL qkd_tee.3.debug > qkd_tee.3.PULL
grep ^key-PUSH qkd_tee.3.debug > qkd_tee.3.PUSH
grep ^key-PULL qkd_tee.4.debug > qkd_tee.4.PULL
grep ^key-PUSH qkd_tee.4.debug > qkd_tee.4.PUSH
grep ^key-PULL qkd_tee.5.debug > qkd_tee.5.PULL
grep ^key-PUSH qkd_tee.5.debug > qkd_tee.5.PUSH
if [ $(wc -l qkd_tee.1.PULL | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.1 has not pulled keys"
    exit 1
fi
if [ $(wc -l qkd_tee.2.PULL | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.2 has not pulled keys"
    exit 1
fi
if [ $(wc -l qkd_tee.3.PULL | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.3 has not pulled keys"
    exit 1
fi
if [ $(wc -l qkd_tee.4.PULL | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.4 has not pulled keys"
    exit 1
fi
if [ $(wc -l qkd_tee.5.PULL | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.5 has not pulled keys"
    exit 1
fi
if [ $(wc -l qkd_tee.1.PUSH | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.1 has not pushed keys"
    exit 1
fi
if [ $(wc -l qkd_tee.2.PUSH | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.2 has not pushed keys"
    exit 1
fi
if [ $(wc -l qkd_tee.3.PUSH | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.3 has not pushed keys"
    exit 1
fi
if [ $(wc -l qkd_tee.4.PUSH | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.4 has not pushed keys"
    exit 1
fi
if [ $(wc -l qkd_tee.5.PUSH | awk '{ print $1; }') = 0 ]; then
    echo "qkd_tee.5 has not pushed keys"
    exit 1
fi

cat qkd_tee.1.PUSH qkd_tee.2.PUSH qkd_tee.3.PUSH qkd_tee.4.PUSH qkd_tee.5.PUSH > qkd_tee.pushed
# TODO: Test below might actually no longer be necessary as any deviation in output should be identified
# by the whole md5 thing going on five lines further down.
if [ $(wc -l qkd_tee.pushed | awk '{ print $1; }') != 1000 ]; then
    echo "not exactly 1000 keys pushed by"
    exit 1
fi

awk '{print $12;}' qkd_tee.pushed > qkd_tee.crc.pushed
if [[ $(md5sum qkd_tee.crc.pushed) != 13b5aa1995cb72c6f284296e298f22e8* ]]; then
    echo "Unexpected output, CRCs do not mismatch (either in count of by value) - failed"
    exit 1
fi

test_cleanup

echo "=== TEST SUCCESS ==="
