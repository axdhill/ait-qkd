#!/bin/bash

# ------------------------------------------------------------
# test-killer
# 
# This is a test file.
#
# TEST: create a pipline and kill one module right in
#       middle of processing. Then start the module anew
#       and place it at the killed position again.
#
# Author: Oliver Maurhart, <oliver.maurhart@ait.ac.at>
#
# Copyright (C) 2012-2016 AIT Austrian Institute of Technology
# AIT Austrian Institute of Technology GmbH
# Donau-City-Strasse 1 | 1220 Vienna | Austria
# http://www.ait.ac.at
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation version 2.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, 
# Boston, MA  02110-1301, USA.
# ------------------------------------------------------------


# base source
export TEST_BASE="@CMAKE_BINARY_DIR@"
source ${TEST_BASE}/test/bin/test-functions


# ------------------------------------------------------------

# init test environment
test_init "$(basename $0).d"

# zap previous keys
rm -rf killer-keys.* &> /dev/null

# create keys
${TEST_BASE}/bin/qkd-key-gen --silent --keys=100 killer-keys

# create a pipeline: cat --> throttle --> tee
${TEST_BASE}/bin/qkd-cat --debug 2> qkd-cat.debug &
${TEST_BASE}/bin/qkd-throttle --debug 2> qkd-throttle.debug &
${TEST_BASE}/bin/qkd-tee --debug 2> qkd-tee.1.debug &
sleep 2

# grab the CAT
MODULE_CAT=$(qkd_qdbus | grep at.ac.ait.qkd.module.cat)
if [ "${MODULE_CAT}" = "" ]; then
    echo "failed to start QKD module: cat"
    exit 1
fi

# grab the THROTTLE
MODULE_THROTTLE=$(qkd_qdbus | grep at.ac.ait.qkd.module.throttle)
if [ "${MODULE_THROTTLE}" = "" ]; then
    echo "failed to start QKD module: throttle"
    exit 1
fi

# grab the TEE
MODULE_TEE=$(qkd_qdbus | grep at.ac.ait.qkd.module.tee)
if [ "${MODULE_TEE}" = "" ]; then
    echo "failed to start QKD module: tee"
    exit 1
fi

# start the CAT
echo "starting module: ${MODULE_CAT} ..."
qkd_qdbus ${MODULE_CAT} /Module Set at.ac.ait.qkd.cat file_url "file://$(pwd)/killer-keys.alice"
qkd_qdbus ${MODULE_CAT} /Module set_urls "" "ipc://$(pwd)/killer-throttle.in" "" ""
qkd_qdbus ${MODULE_CAT} /Module run
qkd_qdbus ${MODULE_CAT} /Module resume

# start the THROTTLE
echo "starting module: ${MODULE_THROTTLE} ..."
qkd_qdbus ${MODULE_THROTTLE} /Module Set at.ac.ait.qkd.throttle max_keys_per_second 25
qkd_qdbus ${MODULE_THROTTLE} /Module set_urls "ipc://$(pwd)/killer-throttle.in" "ipc://$(pwd)/killer-tee.in" "" ""
qkd_qdbus ${MODULE_THROTTLE} /Module run 
qkd_qdbus ${MODULE_THROTTLE} /Module resume

# start the TEE
echo "starting module: ${MODULE_TEE} ..."
qkd_qdbus ${MODULE_TEE} /Module Set at.ac.ait.qkd.tee file_url "file://$(pwd)/killer-keys.1.tee"
qkd_qdbus ${MODULE_TEE} /Module set_urls "ipc://$(pwd)/killer-tee.in" "" "" ""
qkd_qdbus ${MODULE_TEE} /Module run
qkd_qdbus ${MODULE_TEE} /Module resume

# now wait a bit to process some keys
echo "wait some time ..."
sleep 2

# kill the TEE
echo "killing the TEE module ..."
ps -ef | grep qkd-tee | awk '{ print $2; }' | xargs kill

# let some time pass
echo "wait some time ..."
sleep 1

# relaunch the module and reconnect
echo "relaunching TEE module ..."
${TEST_BASE}/bin/qkd-tee --debug 2> qkd-tee.2.debug &
sleep 1

MODULE_TEE=$(qkd_qdbus | grep at.ac.ait.qkd.module.tee)
if [ "${MODULE_TEE}" = "" ]; then
    echo "failed to start QKD module: tee"
    exit 1
fi
qkd_qdbus ${MODULE_TEE} /Module Set at.ac.ait.qkd.tee file_url "file://$(pwd)/killer-keys.2.tee"
qkd_qdbus ${MODULE_TEE} /Module set_urls "ipc://$(pwd)/killer-tee.in" "" "" ""
qkd_qdbus ${MODULE_TEE} /Module run
qkd_qdbus ${MODULE_TEE} /Module resume

sleep 1

wait_idle throttle cat tee

# both modules must have pulled something
# though the overall sum might not be the same since
# some keys might have been dropped due to timeout
if [ "$(grep ^key-PULL qkd-tee.1.debug | wc -l)" = "0" ]; then
    echo "failed: first qkd-tee did not pulled keys"
    exit 1
fi
if [ "$(grep ^key-PULL qkd-tee.2.debug | wc -l)" = "0" ]; then
    echo "failed: second qkd-tee did not pulled keys"
    exit 1
fi
echo "killing and relaunching a module in the pipeline works ok"

# cleanup finally
test_cleanup

# state that test ok
echo "=== TEST SUCCESS ==="

