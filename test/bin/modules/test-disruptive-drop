#!/bin/bash

# ------------------------------------------------------------
# test-disruptive-drop
# 
# This is a test file.
#
# TEST: test the recover ability 
#       if keys are dropped randomly in the pipeline
#
# Author: Oliver Maurhart, <oliver.maurhart@ait.ac.at>
#
# Copyright (C) 2013-2016 AIT Austrian Institute of Technology
# AIT Austrian Institute of Technology GmbH
# Donau-City-Strasse 1 | 1220 Vienna | Austria
# http://www.ait.ac.at
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation version 2.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, 
# Boston, MA  02110-1301, USA.
# ------------------------------------------------------------


# base source
export TEST_BASE="@CMAKE_BINARY_DIR@"
source ${TEST_BASE}/test/bin/test-functions


# ------------------------------------------------------------

# init test environment
test_init "$(basename $0).d"

# zap previous keys
rm -rf cat_keys.* &> /dev/null

# truncate previous debug out
echo -n > drop_debug.alice
echo -n > drop_debug.bob
echo -n > cascade_debug.alice
echo -n > cascade_debug.bob

# create keys
KEYS_TO_PROCESS="100"
${TEST_BASE}/bin/qkd-key-gen --silent --size 2048 --keys ${KEYS_TO_PROCESS} --rate 0.03 cat_keys

# start two pipelines
PIPELINE_CONFIG="file://${TEST_BASE}/test/test-data/disruptive-drop-simple.conf"

# start the modules
( ${TEST_BASE}/bin/qkd-cat --run --config ${PIPELINE_CONFIG} --file "cat_keys.alice" ) &
( ${TEST_BASE}/bin/qkd-cat --bob --run --config ${PIPELINE_CONFIG} --file "cat_keys.bob" ) &
( ${TEST_BASE}/bin/qkd-drop --debug --run --config ${PIPELINE_CONFIG} 1> drop_keys.alice 2>> drop_debug.alice ) &
( ${TEST_BASE}/bin/qkd-drop --debug --bob --run --config ${PIPELINE_CONFIG} 1> drop_keys.bob 2>> drop_debug.bob ) &
( ${TEST_BASE}/bin/qkd-cascade --debug --run --config ${PIPELINE_CONFIG} 1> cascade_keys.alice 2>> cascade_debug.alice ) &
( ${TEST_BASE}/bin/qkd-cascade --debug --bob --run --config ${PIPELINE_CONFIG} 1> cascade_keys.bob 2>> cascade_debug.bob ) &

# wait until the modules are up
while [ "$(${TEST_BASE}/bin/qkd-view | grep at.ac.ait.qkd.module | wc -l)" != "6" ]; do
    echo "waiting for the pipeline to ignite ..."
    sleep 1
done

# wait until the pipeline is through
sleep 1
wait_idle cat drop cascade

# check how many 
if [ ! -s cascade_keys.alice ]; then
    echo "alice has not pushed keys"
    exit 1
fi
if [ ! -s cascade_keys.bob ]; then
    echo "bob has not pushed keys"
    exit 1
fi
diff -q cascade_keys.alice cascade_keys.bob
if [ "$?" != "0" ]; then
    echo "cascade created different results - failed"
    exit 1
fi
echo "cascade corrected keys (despite disrupting pipe) - ok"

# stop modules
test_cleanup

# state that test ok
echo "=== TEST SUCCESS ==="

