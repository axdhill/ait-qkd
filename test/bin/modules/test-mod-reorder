#!/bin/bash

# ------------------------------------------------------------
# test-reorder
# 
# This is a test file.
#
# TEST: test the QKD reorder module
#
# Author: Oliver Maurhart, <oliver.maurhart@ait.ac.at>
#
# Copyright (C) 2013-2016 AIT Austrian Institute of Technology
# AIT Austrian Institute of Technology GmbH
# Donau-City-Strasse 1 | 1220 Vienna | Austria
# http://www.ait.ac.at
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation version 2.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, 
# Boston, MA  02110-1301, USA.
# ------------------------------------------------------------


# base source
export TEST_BASE="@CMAKE_BINARY_DIR@"
source ${TEST_BASE}/test/bin/test-functions


# ------------------------------------------------------------

# init test environment
test_init "$(basename $0).d"

# zap previous keys
rm -rf cat_keys.* &> /dev/null

KEYS_TO_PROCESS="100"
${TEST_BASE}/bin/qkd-key-gen --silent --size 64 --keys ${KEYS_TO_PROCESS} --random-url=linear-congruential:42 cat_keys

# truncate previous debug out
echo -n > reorder_debug.alice

# fix pipeline config
cat ${TEST_BASE}/test/test-data/pipeline.conf | grep -v "^cat.alice.url_pipe_out" | grep -v "^cat.bob.url_pipe_out" > reorder.config
echo "cat.alice.url_pipe_out = ipc:///tmp/qkd/reorder.alice.in" >> reorder.config
echo "cat.bob.url_pipe_out = ipc:///tmp/qkd/reorder.bob.in" >> reorder.config

# start two pipelines
PIPELINE_CONFIG="reorder.config"

# start the modules - we are just using alice
( ${TEST_BASE}/bin/qkd-cat --run --config ${PIPELINE_CONFIG} --file "cat_keys.alice" ) &
( ${TEST_BASE}/bin/qkd-reorder --debug --run --config ${PIPELINE_CONFIG} 1> reorder_keys.alice 2>> reorder_debug.alice ) &

# wait until the modules are up
while [ "$(${TEST_BASE}/bin/qkd-view | grep at.ac.ait.qkd.module.reorder | wc -l)" = "0" ]; do
    echo "waiting for the pipeline to ignite ..."
    sleep 1
done

# wait until all keys have been processed
sleep 1
wait_idle cat reorder
echo "keys reordered"

# compare keys
${TEST_BASE}/bin/qkd-key-dump cat_keys.alice | grep '^key' | head --lines=-10 > reorder.original_keys
${TEST_BASE}/bin/qkd-key-dump reorder_keys.alice | grep '^key' > reorder.reordered_keys

# files MUST differ
if [ ! -s reorder_keys.alice ]; then
    echo "alice has not pushed keys"
    exit 1
fi
diff --brief reorder.original_keys reorder.reordered_keys > /dev/null
if [ "$?" == "0" ]; then
    echo "reordered file is same as input file - failed"
    exit 1
fi

echo "Verifying MD5 hashes of generated data"
if [[ $(md5sum "cat_keys.alice") != 77863e546e843d86fb97b07e8d2bd76e* ]]; then
    echo "Alice used unexpected original keys - failed"
    exit 1
fi
if [[ $(md5sum "reorder_keys.alice") != b377655cce3e48690c0eedc10e1848f9* ]]; then
    echo "Alice used unexpected reordered keys - failed"
    exit 1
fi

# stop machines
test_cleanup

# state that test ok
echo "=== TEST SUCCESS ==="
