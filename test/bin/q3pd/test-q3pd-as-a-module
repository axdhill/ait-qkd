#!/bin/bash

# ------------------------------------------------------------
# test-q3pd-as-a-module
# 
# This is a test file.
#
# TEST: test the keystore q3pd link qkd module
#
# Author: Oliver Maurhart, <oliver.maurhart@ait.ac.at>
#
# Copyright (C) 2012-2016 AIT Austrian Institute of Technology
# AIT Austrian Institute of Technology GmbH
# Donau-City-Strasse 1 | 1220 Vienna | Austria
# http://www.ait.ac.at
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation version 2.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, 
# Boston, MA  02110-1301, USA.
# ------------------------------------------------------------


# base source
export TEST_BASE="@CMAKE_BINARY_DIR@"
source ${TEST_BASE}/test/bin/test-functions


# ------------------------------------------------------------

test_init "$(basename $0).d"

rm -rf "${DB_ALICE_2_BOB}" &> /dev/null
rm -rf "${DB_BOB_2_ALICE}" &> /dev/null
rm -rf q3pd_*.stderr k_? &> /dev/null

q3pd_start "alice" --debug || exit $?
while :; do
    ( qkd_qdbus | grep at.ac.ait.q3p.node-alice &> /dev/null ) && break;
done
q3pd_start "bob" --debug || exit $?
while :; do
    ( qkd_qdbus | grep at.ac.ait.q3p.node-bob &> /dev/null) && break;
done

# launch alice
qkd_qdbus at.ac.ait.q3p.node-alice /Node create_link "alice_to_bob" &> /dev/null
qkd_qdbus at.ac.ait.q3p.node-alice /Link/alice_to_bob open_db "file://${DB_ALICE_2_BOB}" &> /dev/null
qkd_qdbus at.ac.ait.q3p.node-alice /Link/alice_to_bob inject_url "file://${SHARED_SECRET_FILE}" &> /dev/null
qkd_qdbus at.ac.ait.q3p.node-alice /Link/alice_to_bob org.freedesktop.DBus.Properties.Set at.ac.ait.q3p.link master "true" &> /dev/null

# launch bob
qkd_qdbus at.ac.ait.q3p.node-bob /Node create_link "bob_to_alice" &> /dev/null
qkd_qdbus at.ac.ait.q3p.node-bob /Link/bob_to_alice open_db "file://${DB_BOB_2_ALICE}" &> /dev/null
qkd_qdbus at.ac.ait.q3p.node-bob /Link/bob_to_alice inject_url "file://${SHARED_SECRET_FILE}" &> /dev/null
qkd_qdbus at.ac.ait.q3p.node-bob /Link/bob_to_alice org.freedesktop.DBus.Properties.Set at.ac.ait.q3p.link slave "true" &> /dev/null

KEYS_ALICE=$(qkd_qdbus at.ac.ait.q3p.node-alice /Link/alice_to_bob/CommonStore charge)
if [ "${KEYS_ALICE}" -lt "100" ]; then
    echo "Not enough (<100) keys on alice side"
    q3pd_stop "alice"
    q3pd_stop "bob"
    exit 1
fi
KEYS_BOB=$(qkd_qdbus at.ac.ait.q3p.node-bob /Link/bob_to_alice/CommonStore charge)
if [ "${KEYS_BOB}" -lt "100" ]; then
    echo "Not enough (<100) keys on bob side"
    q3pd_stop "alice"
    q3pd_stop "bob"
    exit 1
fi

qkd_qdbus at.ac.ait.q3p.node-alice /Link/alice_to_bob listen "tcp://127.0.0.1:10011" "${SHARED_SECRET}" &> /dev/null
qkd_qdbus at.ac.ait.q3p.node-bob /Link/bob_to_alice listen "tcp://127.0.0.1:10021" "${SHARED_SECRET}" &> /dev/null
qkd_qdbus at.ac.ait.q3p.node-alice /Link/alice_to_bob connect "tcp://127.0.0.1:10021" "${SHARED_SECRET}" &> /dev/null

CONNECTED_ALICE=$(qkd_qdbus at.ac.ait.q3p.node-alice /Link/alice_to_bob connected)
if [ "${CONNECTED_ALICE}" != "true" ]; then
    echo "alice failed to connect to bob"
    q3pd_stop "alice"
    q3pd_stop "bob"
    exit 1
fi
CONNECTED_BOB=$(qkd_qdbus at.ac.ait.q3p.node-bob /Link/bob_to_alice connected)
if [ "${CONNECTED_BOB}" != "true" ]; then
    echo "bob failed to connect to alice"
    q3pd_stop "alice"
    q3pd_stop "bob"
    exit 1
fi

echo "q3pd alice and bob connected..."

# ---- as both q3pd are now connected, fed them with keys ----

NUMBER_KEYS=1000
rm -rf keystore-keys.* &> /dev/null
${TEST_BASE}/bin/qkd-key-gen --silent --keys=${NUMBER_KEYS} keystore-keys
cp keystore-keys.alice keystore-keys.bob

PIPELINE_CONFIG="file://${TEST_BASE}/test/test-data/keystore.conf"

( ${TEST_BASE}/bin/qkd-cat --debug --run --config ${PIPELINE_CONFIG} --file "keystore-keys.alice" 2>> cat_debug.alice ) &
( ${TEST_BASE}/bin/qkd-cat --debug --bob --run --config ${PIPELINE_CONFIG} --file "keystore-keys.bob" 2>> cat_debug.bob ) &

while [ "$(${TEST_BASE}/bin/qkd-view | grep at.ac.ait.qkd.module. | wc -l)" != "4" ]; do
    echo "waiting for the pipeline to ignite ..."
    sleep 1
done
echo "pipeline up"

sleep 3

# check the results of the nodes by collecting all key-PULL lines
rm -f k_* &> /dev/null
i=1
for f in q3pd_*.stderr; do
    # omit the timestamp
    grep ^key-PULL ${f} | awk '{ print $1 " " $3 " " $4 " " $5 " " $6 " " $7 " " $8 " " $9 " " $10 " " $11 " " $12 }' > k_${i}
    i=$((i + 1))
done

# we MUST have only two k_* files
if [ "$(ls -1 k_*  | wc -l)" != "2" ]; then
    echo "huh! created more k_ files than expected. confused."
    exit 1
fi

# we need exactly ${NUMBER_KEYS} lines
if [ "$(wc -l k_1 | awk '{ print $1 }')" != "${NUMBER_KEYS}" ]; then
    echo "pulled less keys than expected"
    exit 1
fi

# check how many 
diff -q k_1 k_2
if [ "$?" != "0" ]; then
    echo "pulled different keys - failed"
    exit 1
fi
echo "q3pd pulled keys - ok"

q3pd_stop "bob" || exit $?
q3pd_stop "alice" || exit $?

# stop machines
test_cleanup

# state that test ok
echo "=== TEST SUCCESS ==="



