#!/bin/bash

# ------------------------------------------------------------
# qkd-pipeline
# 
# Run a simple, easy qkd-pipeline
#
# Autor: Oliver Maurhart, <oliver.maurhart@ait.ac.at>
#
# Copyright (C) 2013-2015 AIT Austrian Institute of Technology
# AIT Austrian Institute of Technology GmbH
# Donau-City-Strasse 1 | 1220 Vienna | Austria
# http://www.ait.ac.at
#
# This file is part of the AIT QKD Software Suite.
#
# The AIT QKD Software Suite is free software: you can redistribute 
# it and/or modify it under the terms of the GNU General Public License 
# as published by the Free Software Foundation, either version 3 of 
# the License, or (at your option) any later version.
# 
# The AIT QKD Software Suite is distributed in the hope that it will 
# be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with the AIT QKD Software Suite. 
# If not, see <http://www.gnu.org/licenses/>.
# ------------------------------------------------------------

# we must have a role
if [ -z "${1}" ]; then
    echo "please specify a role: \"$0 alice\" or \"$0 bob\""
    exit 1
fi

# detect either alice or bob
ROLE="x"
ROLE_EXTENSION="${1}"
if [ "${ROLE_EXTENSION}" = "alice" ]; then
    ROLE=""
fi
if [ "${ROLE_EXTENSION}" = "bob" ]; then
    ROLE="--bob"
fi

# got a good role?
if [ "${ROLE}" = "x" ]; then
    echo "please chose either 'alice' or 'bob' as role"
    exit 1
fi


# --------------------------------------------------
# ensure we have a clean enviornment
# 
function qkd_cleanup() {

    # kick any running q3pd processes
    for p in $(qdbus | grep at.ac.ait.q3p.node); do
        PID=$(qdbus ${p} /Node process_id 2> /dev/null) && (
            echo "found q3pd running with pid ${PID} - killing ..."
            kill ${PID}
        )
    done
    
    # kick any running qkd modules processes
    for p in $(qdbus | grep at.ac.ait.qkd.module); do
        PID=$(qdbus ${p} /Module process_id 2> /dev/null) && (
            echo "found qkd module running with pid ${PID} - killing ..."
            kill ${PID}
        )
    done
}


# ------------------------------------------------------------


# clean
qkd_cleanup

# create folder for debug logs
TIMESTAMP=$(date "+%Y%m%d_%H%M")
LOG_FOLDER="/var/log/qkd/${TIMESTAMP}"
mkdir -p ${LOG_FOLDER} &> /dev/null

# prepare configs
PIPELINE_CONFIG="/etc/qkd/qkd.conf"
PIPELINE_AUTH_PRE_CONFIG="/etc/qkd/auth_pre.conf"
PIPELINE_AUTH_POST_CONFIG="/etc/qkd/auth_post.conf"

# start the modules: key material feeder
( qkd-cat                   --debug ${ROLE} --run --config ${PIPELINE_CONFIG} 2>> ${LOG_FOLDER}/cat_debug.${ROLE_EXTENSION} ) &

# start the modules
( qkd-auth                  --debug ${ROLE} --run --config ${PIPELINE_AUTH_PRE_CONFIG} 2>> ${LOG_FOLDER}/auth_pre_debug.${ROLE_EXTENSION} ) &
( qkd-bb84                  --debug ${ROLE} --run --config ${PIPELINE_CONFIG} 2>> ${LOG_FOLDER}/bb84_debug.${ROLE_EXTENSION} ) &
( qkd-ldpc                  --debug ${ROLE} --run --config ${PIPELINE_CONFIG} 2>> ${LOG_FOLDER}/ldpc_debug.${ROLE_EXTENSION} ) &
( qkd-buffer                --debug ${ROLE} --run --config ${PIPELINE_CONFIG} 2>> ${LOG_FOLDER}/buffer_debug.${ROLE_EXTENSION} ) &
( qkd-confirmation          --debug ${ROLE} --run --config ${PIPELINE_CONFIG} 2>> ${LOG_FOLDER}/confirmation_debug.${ROLE_EXTENSION} ) &
( qkd-privacy-amplification --debug ${ROLE} --run --config ${PIPELINE_CONFIG} 2>> ${LOG_FOLDER}/privacy_amplification_debug.${ROLE_EXTENSION} ) &
( qkd-auth                  --debug ${ROLE} --run --config ${PIPELINE_AUTH_POST_CONFIG} 1> final_auth_keys.${ROLE_EXTENSION} 2>> ${LOG_FOLDER}/auth_post_debug.${ROLE_EXTENSION} ) &

# wait until the modules are up
while [ "$(qkd-view | grep at.ac.ait.qkd.module | wc -l)" != "8" ]; do
    echo "waiting for the pipeline to ignite ..."
    sleep 1
done

echo "=== QKD Pipeline up ==="

